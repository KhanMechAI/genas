@article{Fekiac2011,
abstract = {This paper describes various methods used to encode artificial neural networks to chromosomes to be used in evolutionary computation. The target of this review is to cover the main techniques of network encoding and make it easier to choose one when implementing a custom evolutionary algorithm for finding the network topology. Most of the encoding methods are mentioned in the context of neural networks; however all of them could be generalized to automata networks or even oriented graphs. We present direct and indirect encoding methods, and given examples of their genotypes. We also describe the possibilities of applying genetic operators of mutation and crossover to genotypes encoded by these methods. Also, the dependencies of using special evolutionary algorithms with some of the encodings were considered. {\textcopyright} ECMS.},
author = {Fekiac, Jozef and Zelinka, Ivan and Burguillo, Juan C.},
doi = {10.7148/2011-0410-0416},
file = {:C$\backslash$:/Users/khans/Downloads/A{\_}Review{\_}Of{\_}Methods{\_}For{\_}Encoding{\_}Neural{\_}Network{\_}To.pdf:pdf},
isbn = {9780956494429},
journal = {Proceedings - 25th European Conference on Modelling and Simulation, ECMS 2011},
keywords = {Artificial neural network,Automata network,Evolutionary computation,Genetic algorithm,Genetic programming,Graph grammar,Network encoding},
mendeley-groups = {COMP9417 Major Project},
number = {June},
pages = {410--416},
title = {{A review of methods for encoding neural network topologies in evolutionary computation}},
year = {2011}
}

@article{Irwin-Harris2019,
abstract = {Convolutional neural networks (CNNs) have demonstrated highly effective performance in image classification across a range of data sets. The best performance can only be obtained with CNNs when the appropriate architecture is chosen, which depends on both the volume and nature of the training data available. Many of the state-of-the-art architectures in the literature have been hand-crafted by human researchers, but this requires expertise in CNNs, domain knowledge, or trial-and-error experimentation, often using expensive resources. Recent work based on evolutionary deep learning has offered an alternative, in which evolutionary computation (EC) is applied to automatic architecture search. A key component in evolutionary deep learning is the chosen encoding strategy; however, previous approaches to CNN encoding in EC typically have restrictions in the architectures that can be represented. Here, we propose an encoding strategy based on a directed acyclic graph representation, and introduce an algorithm for random generation of CNN architectures using this encoding. In contrast to previous work, our proposed encoding method is more general, enabling representation of CNNs of arbitrary connectional structure and unbounded depth. We demonstrate its effectiveness using a random search, in which 200 randomly generated CNN architectures are evaluated. To improve the computational efficiency, the 200 CNNs are trained using only 10{\%} of the CIFAR-10 training data; the three bestperforming CNNs are then re-trained on the full training set. The results show that the proposed representation and initialisation method can achieve promising accuracy compared to manually designed architectures, despite the simplicity of the random search approach and the reduced data set. We intend that future work can improve on these results by applying evolutionary search using this encoding.},
author = {Irwin-Harris, William and Sun, Yanan and Xue, Bing and Zhang, Mengjie},
doi = {10.1109/CEC.2019.8790093},
file = {:G$\backslash$:/OneDrive - UNSW/University/Postgraduate/Year 3 Trimester 2/COMP9417/Major Project/resources/papers/graph-based-encoding-for-evolutionary-conv-nn-architecture-design.pdf:pdf},
isbn = {9781728121536},
journal = {2019 IEEE Congress on Evolutionary Computation, CEC 2019 - Proceedings},
mendeley-groups = {COMP9417 Major Project},
number = {June},
pages = {546--553},
title = {{A Graph-Based Encoding for Evolutionary Convolutional Neural Network Architecture Design}},
year = {2019}
}

